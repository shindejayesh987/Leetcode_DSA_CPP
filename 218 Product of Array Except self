class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        // Get the number of elements in the input vector
        int n = nums.size();

        // Create a result vector of the same size initialized with 1s
        vector<int> result(n, 1);

        // Initialize a prefix variable
        int prefix = 1;

        // Calculate the product of all elements to the left of the current element
        for (int i = 0; i < n; i++) {
            // Store the product before the current element in the result vector
            result[i] = prefix;

            // Update the prefix product for the next element
            prefix = prefix * nums[i];
        }

        // Initialize a postfix variable
        int postfix = 1;

        // Calculate the product of all elements to the right of the current element
        for (int i = n - 1; i >= 0; i--) {
            // Multiply the current element's result with the product after the current element
            result[i] = result[i] * postfix;

            // Update the postfix product for the next element
            postfix = postfix * nums[i];
        }

        // Return the result vector containing the product of all elements except itself
        return result;
    }
};
