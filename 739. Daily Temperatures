class Solution {
public:
    vector<int> dailyTemperatures(vector<int>& temperatures) {
        int n = temperatures.size(); // Get the number of days in the input.

        // Create a stack to store pairs of (index, temperature).
        stack<pair<int, int>> stk;

        // Initialize a vector to store the result, initially filled with zeros.
        vector<int> result(n);

        // Iterate through each day's temperature data.
        for (int i = 0; i < n; i++) {
            int currDay = i;       // Current day's index.
            int currTemp = temperatures[i]; // Current day's temperature.

            // While the stack is not empty and the temperature of the current day is greater than
            // the temperature of the day stored at the top of the stack.
            while (!stk.empty() && stk.top().second < currTemp) {
                int prevDay = stk.top().first; // Previous day's index.
                int prevTemp = stk.top().second; // Previous day's temperature.

                stk.pop(); // Remove the previous day's temperature from the stack.

                // Calculate the number of days until a warmer temperature is found.
                result[prevDay] = currDay - prevDay;
            }

            // Push the current day's index and temperature onto the stack for future comparisons.
            stk.push({currDay, currTemp});
        }

        return result; // Return the vector containing the number of days until a warmer temperature.
    }
};
